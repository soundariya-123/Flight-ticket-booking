var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.863,1,2.034]],["body/controllers/AppController.html",[0,3.252,1,2.585,2,1.873,3,0.311,4,0.231,5,3.613,6,0.442,7,3.613,8,0.488,9,1.778,10,4.961,11,1.415,12,0.024,13,4.279,14,2.368,15,3.613,16,1.778,17,1.624,18,4.279,19,2.018,20,0.021,21,0.021]],["title/modules/AppModule.html",[22,2.24,23,2.24]],["body/modules/AppModule.html",[1,2.255,2,1.634,3,0.272,4,0.202,12,0.024,14,3.24,20,0.019,21,0.019,23,4.43,24,1.903,25,2.509,26,3.152,27,3.152,28,3.152,29,3.538,30,3.538,31,3.538,32,2.974,33,2.255,34,2.255,35,3.732,36,2.483,37,3.732]],["title/injectables/AppService.html",[14,1.863,38,1.474]],["body/injectables/AppService.html",[1,2.641,3,0.318,4,0.236,6,0.451,7,3.69,8,0.499,9,1.801,10,5.009,12,0.023,14,2.418,15,4.598,16,1.801,17,1.659,19,2.061,20,0.021,21,0.021,39,2.061,40,3.69,41,3.69,42,4.37,43,4.37]],["title/classes/ExceptionExceptionFilter.html",[44,1.114,45,2.498]],["body/classes/ExceptionExceptionFilter.html",[3,0.285,4,0.212,6,0.525,8,0.448,9,1.682,12,0.023,16,1.298,20,0.019,21,0.019,45,2.911,46,1.489,47,3.313,48,3.313,49,3.313,50,3.313,51,3.923,52,3.923,53,5.085,54,3.923,55,3.923,56,5.085,57,3.923,58,5.085,59,5.642,60,3.923,61,3.313,62,1.489,63,1.298,64,0.636,65,1.489,66,3.313,67,2.911,68,3.923,69,3.923]],["title/injectables/JwtAuthGuard.html",[38,1.474,70,2.498]],["body/injectables/JwtAuthGuard.html",[3,0.356,4,0.264,6,0.505,12,0.022,20,0.022,21,0.022,39,2.308,70,4.328,71,4.131,72,4.131,73,4.131]],["title/interfaces/JwtPayload.html",[74,2.24,75,2.24]],["body/interfaces/JwtPayload.html",[3,0.32,4,0.238,6,0.454,8,0.502,12,0.023,17,2.077,20,0.021,21,0.021,64,0.713,74,2.929,75,3.96,76,4.401,77,3.717,78,3.717,79,1.809,80,4.142,81,1.927,82,3.717]],["title/injectables/JwtStratagy.html",[38,1.474,83,2.034]],["body/injectables/JwtStratagy.html",[3,0.277,4,0.205,6,0.514,8,0.434,9,1.648,12,0.023,16,1.258,20,0.019,21,0.019,39,1.793,62,1.891,63,1.648,64,0.807,65,1.891,67,2.821,73,3.21,75,3.697,83,3.01,84,3.21,85,3.01,86,5.556,87,3.01,88,3.802,89,3.01,90,3.21,91,3.802,92,3.802,93,3.802,94,4.982,95,3.21]],["title/injectables/ResponseInterceptor.html",[38,1.474,96,2.498]],["body/injectables/ResponseInterceptor.html",[3,0.273,4,0.203,6,0.51,8,0.429,9,1.635,12,0.023,16,1.635,20,0.019,21,0.019,38,1.644,39,1.771,41,3.171,44,1.242,62,1.426,63,1.242,64,0.608,65,1.426,66,3.171,67,2.786,96,2.786,97,3.171,98,3.755,99,3.755,100,2.269,101,3.755,102,3.171,103,4.941,104,3.755,105,4.664,106,4.941,107,5.523,108,3.755,109,3.755,110,3.755,111,3.171,112,3.171,113,1.771,114,2.078]],["title/guards/RolesGuard.html",[115,2.498,116,2.498]],["body/guards/RolesGuard.html",[3,0.27,4,0.2,6,0.567,8,0.423,9,1.622,12,0.024,16,1.227,20,0.019,21,0.019,62,1.861,63,1.622,64,0.794,65,1.861,82,3.133,87,2.962,90,3.133,105,4.636,111,3.133,112,3.133,113,1.75,116,3.637,117,3.71,118,3.133,119,2.962,120,5.49,121,3.71,122,6.073,123,3.71,124,3.71]],["title/entities/Seats.html",[125,1.474,126,1.588]],["body/entities/Seats.html",[3,0.221,4,0.164,6,0.313,8,0.346,11,1.872,12,0.025,20,0.016,21,0.016,64,0.917,79,1.413,81,2.57,125,1.327,126,2.669,127,1.832,128,2.56,129,1.151,130,2.669,131,2.005,132,2.017,133,4.175,134,1.233,135,3.29,136,3.607,137,3.572,138,1.636,139,2.017,140,1.546,141,1.546,142,1.546,143,1.546,144,3.169,145,2.017,146,2.842,147,1.43,148,2.017,149,2.56,150,1.546,151,2.56,152,3.032]],["title/controllers/SeatsController.html",[0,1.863,153,2.24]],["body/controllers/SeatsController.html",[2,1.614,3,0.268,4,0.199,6,0.504,8,0.421,9,1.615,11,1.22,12,0.024,16,1.22,20,0.019,21,0.019,62,1.4,63,1.22,64,0.597,65,1.4,100,2.228,113,1.739,126,2.859,153,3.249,154,3.114,155,2.736,156,3.687,157,3.687,158,3.114,159,4.123,160,3.114,161,3.521,162,3.114,163,2.454,164,2.736,165,2.489,166,3.114,167,3.114,168,3.687,169,2.736,170,2.228,171,2.228]],["title/classes/SeatsDTO.html",[44,1.114,161,2.034]],["body/classes/SeatsDTO.html",[3,0.227,4,0.169,6,0.323,8,0.357,11,1.663,12,0.024,20,0.017,21,0.017,46,1.186,64,0.927,79,1.443,81,2.382,114,2.414,126,2.566,130,2.566,131,1.927,133,4.593,134,1.259,135,3.619,136,3.683,137,3.619,138,1.663,140,1.593,141,1.593,142,1.593,143,1.593,144,2.318,149,2.638,150,1.593,161,1.888,172,2.638,173,1.888,174,2.636,175,1.888,176,1.888,177,3.037,178,3.037]],["title/modules/SeatsModule.html",[22,2.24,29,2.034]],["body/modules/SeatsModule.html",[2,1.9,3,0.316,4,0.234,12,0.023,20,0.021,21,0.021,24,2.212,25,2.764,29,3.853,32,3.276,33,2.622,34,2.622,36,2.887,153,2.887,179,3.664,180,3.664,181,3.743,182,4.339]],["title/classes/SeatsRepository.html",[44,1.114,183,2.24]],["body/classes/SeatsRepository.html",[3,0.348,4,0.258,6,0.493,12,0.022,20,0.022,21,0.022,46,1.814,183,3.179,184,4.035,185,3.179,186,3.179,187,3.179,188,3.179,189,3.179,190,2.887]],["title/injectables/SeatsService.html",[38,1.474,181,2.034]],["body/injectables/SeatsService.html",[3,0.246,4,0.183,6,0.541,8,0.386,9,1.524,12,0.023,16,1.119,19,1.596,20,0.018,21,0.018,39,1.596,62,1.749,63,1.524,64,0.746,65,1.749,79,1.524,85,2.784,87,2.044,113,1.596,126,1.596,147,1.596,159,3.891,160,2.856,161,3.4,169,2.51,170,2.044,171,2.044,181,2.784,183,3.487,191,2.856,192,2.51,193,2.51,194,2.51,195,4.174,196,3.383,197,4.608,198,3.167,199,2.51,200,2.51,201,3.383,202,2.251,203,2.51]],["title/entities/TicketDetails.html",[125,1.474,150,1.716]],["body/entities/TicketDetails.html",[3,0.172,4,0.128,6,0.244,8,0.27,11,1.902,12,0.025,17,1.628,20,0.014,21,0.014,64,0.931,79,1.179,81,2.624,125,1.036,126,1.116,127,1.43,129,1.353,130,2.711,131,2.036,132,1.574,134,1.029,135,1.574,138,0.783,139,1.574,140,1.206,141,1.206,142,1.206,143,1.206,145,2.372,146,3.176,147,1.681,148,2.372,150,1.817,151,1.998,165,2.186,204,0.898,205,1.43,206,1.574,207,1.998,208,2.591,209,2.854,210,3.621,211,3.621,212,3.621,213,3.182,214,1.998,215,2.366,216,4.716,217,4.144,218,2.645,219,2.366,220,2.645]],["title/classes/TicketDetailsDTO.html",[44,1.114,221,2.498]],["body/classes/TicketDetailsDTO.html",[3,0.181,4,0.135,6,0.257,8,0.284,11,1.732,12,0.025,17,1.406,19,2.68,20,0.014,21,0.014,46,0.946,64,0.946,79,1.225,114,2.05,126,1.175,129,0.946,131,2.013,134,1.07,135,1.657,138,1.225,140,1.27,141,1.27,142,1.27,143,1.27,165,2.255,173,1.505,174,2.238,175,1.505,176,1.505,177,3.163,178,3.163,204,0.946,205,1.505,206,1.657,208,2.672,209,3.259,210,4.135,211,3.734,212,4.42,213,3.281,216,4.797,217,4.215,218,1.848,220,1.848,221,1.848,222,2.103,223,4.215]],["title/classes/TicketDetailsRepository.html",[44,1.114,198,2.034]],["body/classes/TicketDetailsRepository.html",[3,0.34,4,0.252,6,0.482,12,0.022,20,0.022,21,0.022,46,1.773,185,3.107,186,3.107,187,3.107,188,3.107,189,3.107,190,2.821,198,2.821,204,1.773,205,2.821,206,3.107,224,3.943]],["title/entities/UserBooking.html",[125,1.474,129,1.278]],["body/entities/UserBooking.html",[3,0.163,4,0.121,6,0.231,8,0.255,11,1.954,12,0.025,17,1.297,20,0.013,21,0.013,64,0.957,79,1.13,81,2.7,125,0.979,127,1.352,129,1.297,130,2.786,131,2.092,132,1.488,134,0.986,137,2.757,138,1.371,139,1.488,140,1.14,141,1.14,142,1.14,143,1.14,145,2.757,146,2.273,147,1.055,148,1.488,150,1.14,165,2.113,204,0.849,214,1.889,225,1.238,226,1.889,227,3.499,228,3.499,229,3.499,230,3.499,231,3.074,232,2.113,233,3.499,234,2.273,235,2.884,236,4.889,237,2.534,238,1.889,239,2.237,240,2.237,241,1.14,242,2.237,243,1.659]],["title/controllers/UserBookingController.html",[0,1.863,244,2.24]],["body/controllers/UserBookingController.html",[2,2.002,3,0.243,4,0.181,6,0.472,8,0.382,9,1.513,11,1.513,12,0.024,16,1.724,20,0.018,21,0.018,62,1.736,63,1.513,64,0.741,65,1.736,113,2.157,129,1.736,130,1.578,134,1.32,138,1.513,155,2.482,170,2.764,171,2.764,204,1.27,208,2.764,225,1.852,232,1.706,244,3.043,245,2.825,246,2.825,247,2.825,248,2.825,249,2.825,250,2.825,251,2.825,252,3.862,253,2.825,254,3.346,255,2.825,256,2.825,257,3.149,258,3.346,259,3.346]],["title/modules/UserBookingModule.html",[22,2.24,30,2.034]],["body/modules/UserBookingModule.html",[2,1.873,3,0.311,4,0.231,12,0.023,20,0.021,21,0.021,24,2.181,25,2.74,30,3.837,32,3.247,33,2.585,34,2.585,36,2.847,204,1.624,225,2.368,244,2.847,260,3.613,261,3.613,262,3.724,263,4.279]],["title/classes/UserBookingRepository.html",[44,1.114,264,2.24]],["body/classes/UserBookingRepository.html",[3,0.282,4,0.209,6,0.521,8,0.442,9,1.668,12,0.023,16,1.281,20,0.019,21,0.019,46,1.471,62,1.471,63,1.281,64,0.627,65,1.471,85,3.047,95,3.271,129,1.471,131,1.372,134,1.118,138,1.668,165,1.975,185,2.578,186,2.578,187,2.578,188,2.578,189,2.578,190,2.341,204,1.471,225,2.144,264,2.578,265,3.271,266,5.043,267,3.874,268,3.874,269,3.874,270,3.874,271,3.874,272,3.874]],["title/injectables/UserBookingService.html",[38,1.474,262,2.034]],["body/injectables/UserBookingService.html",[3,0.22,4,0.163,6,0.509,8,0.344,9,1.408,12,0.024,16,1.408,19,1.423,20,0.016,21,0.016,39,1.423,62,1.872,63,1.631,64,0.799,65,1.872,79,1.408,85,3.237,87,1.823,113,2.008,129,1.616,134,0.871,138,1.408,147,1.423,169,2.238,170,2.572,171,2.572,192,2.238,193,2.238,194,2.238,195,3.659,198,2.572,199,2.238,200,2.238,202,2.008,203,2.238,204,1.145,208,2.572,225,1.67,252,3.594,253,2.548,255,2.548,256,2.548,257,2.98,262,2.572,264,3.281,273,2.548,274,3.017,275,4.256,276,3.017,277,3.017,278,3.017,279,3.017]],["title/classes/UserbookingDTO.html",[44,1.114,257,2.034]],["body/classes/UserbookingDTO.html",[3,0.163,4,0.121,6,0.232,8,0.256,11,1.871,12,0.025,17,1.3,20,0.013,21,0.013,46,0.852,64,0.958,79,1.133,81,2.537,114,1.895,130,2.734,131,2.053,134,0.989,137,3.092,138,1.374,140,1.144,141,1.144,142,1.144,143,1.144,150,1.144,165,2.117,173,1.356,174,2.07,175,1.356,176,1.356,177,3.418,178,3.418,204,0.852,227,3.507,228,3.924,229,3.507,230,3.507,231,3.081,232,2.117,233,3.507,234,2.279,236,4.894,237,1.665,241,1.144,243,3.081,257,1.356,280,1.896,281,1.896,282,2.245,283,2.245,284,2.245]],["title/entities/Users.html",[125,1.474,241,1.716]],["body/entities/Users.html",[3,0.165,4,0.123,6,0.234,8,0.259,11,1.961,12,0.025,17,1.909,20,0.013,21,0.013,63,1.663,64,0.96,79,1.143,80,2.782,81,2.708,119,2.527,125,0.994,127,1.372,129,1.909,130,2.797,131,2.1,132,1.51,134,0.997,138,1.383,139,1.51,140,1.157,141,1.157,142,1.157,143,1.157,145,2.782,146,2.298,147,1.071,148,1.51,209,2.782,234,1.51,235,1.917,238,1.917,241,3.073,243,1.684,285,1.917,286,3.531,287,2.917,288,2.563,289,2.917,290,2.27,291,2.27,292,2.27,293,1.51,294,2.27]],["title/controllers/UsersController.html",[0,1.863,295,2.24]],["body/controllers/UsersController.html",[2,1.737,3,0.199,4,0.148,6,0.529,8,0.312,9,1.312,11,1.545,12,0.024,16,1.694,20,0.015,21,0.015,62,1.773,63,1.545,64,0.756,65,1.773,100,1.653,113,2.202,130,1.29,134,0.79,138,1.312,155,2.029,162,2.309,163,2.64,164,2.944,165,2.611,166,2.309,167,2.309,232,3.056,241,1.394,246,2.309,247,2.309,248,2.309,249,2.309,250,2.309,251,2.309,295,2.64,296,2.309,297,3.35,298,3.35,299,3.35,300,2.309,301,2.735,302,3.967,303,2.735,304,2.735,305,2.735,306,2.735,307,3.35,308,3.35,309,2.309,310,2.821,311,2.735,312,2.309,313,2.309,314,2.735,315,2.309,316,2.397,317,2.735]],["title/classes/UsersDTO.html",[44,1.114,316,2.034]],["body/classes/UsersDTO.html",[3,0.16,4,0.119,6,0.228,8,0.252,11,1.732,12,0.025,17,1.884,20,0.013,21,0.013,46,0.837,50,1.861,63,1.642,64,0.953,79,1.117,80,3.063,81,2.524,114,1.869,119,2.482,129,1.748,131,1.992,134,1.186,138,1.523,173,1.332,174,2.041,175,1.332,176,1.332,177,2.999,178,3.164,208,1.332,209,3.303,223,4.044,232,3.168,234,1.467,241,1.124,286,4.191,287,3.887,288,3.683,289,4.191,293,1.467,316,1.332,318,1.861,319,3.378,320,2.204,321,1.861,322,2.204,323,1.861,324,1.861,325,2.204]],["title/modules/UsersModule.html",[22,2.24,31,2.034]],["body/modules/UsersModule.html",[2,1.707,3,0.284,4,0.211,12,0.024,20,0.019,21,0.019,24,1.987,25,2.582,31,3.944,32,3.06,33,2.356,34,2.356,36,2.594,83,3.987,295,2.594,326,3.292,327,3.292,328,3.292,329,3.598,330,3.898,331,3.898]],["title/classes/UsersRepository.html",[44,1.114,89,2.034]],["body/classes/UsersRepository.html",[3,0.348,4,0.258,6,0.493,12,0.022,20,0.022,21,0.022,46,1.814,89,2.887,185,3.179,186,3.179,187,3.179,188,3.179,189,3.179,190,2.887,332,4.035]],["title/injectables/UsersService.html",[38,1.474,329,2.034]],["body/injectables/UsersService.html",[3,0.195,4,0.145,6,0.557,8,0.307,9,1.296,12,0.024,16,1.529,19,1.267,20,0.015,21,0.015,39,1.267,62,1.928,63,1.786,64,0.823,65,1.928,79,1.296,85,3.406,87,1.624,89,2.793,113,2.18,131,0.952,134,0.776,138,1.296,147,1.267,163,1.788,170,1.624,171,1.624,192,1.993,193,1.993,194,1.993,195,3.429,199,1.993,200,1.993,202,1.788,203,1.993,217,1.993,232,2.753,297,3.307,298,3.307,299,3.903,300,2.269,307,2.269,308,3.307,309,2.269,310,2.793,312,2.269,313,2.269,315,2.269,316,2.367,329,2.367,333,2.269,334,2.269,335,2.687,336,2.687,337,5.079,338,2.687,339,2.687,340,2.687]],["title/coverage.html",[341,3.407]],["body/coverage.html",[0,2.282,1,1.09,4,0.097,5,1.523,12,0.025,14,0.998,20,0.011,21,0.011,38,2.212,40,1.523,44,1.837,45,1.338,47,1.523,48,1.523,49,1.523,64,0.292,70,1.338,71,1.523,72,1.523,74,1.2,75,1.2,77,1.523,78,1.523,83,1.09,84,1.523,89,1.09,96,1.338,97,1.523,115,1.338,116,1.338,118,1.523,119,1.09,125,1.806,126,0.851,128,1.523,129,0.685,131,0.639,150,0.919,153,1.2,154,1.523,161,1.09,172,1.523,181,1.09,183,1.2,184,1.523,191,1.523,198,1.09,202,1.2,204,1.993,205,2.18,206,2.401,207,1.523,221,1.338,222,1.523,224,1.523,225,2.282,226,1.523,241,0.919,244,1.2,245,1.523,257,1.09,262,1.09,264,1.2,265,1.523,273,1.523,280,1.523,281,1.523,285,1.523,295,1.2,296,1.523,310,1.09,316,1.09,318,1.523,329,1.09,332,1.523,333,1.523,341,1.338,342,1.803,343,1.803,344,1.803,345,6.603,346,5.053,347,2.437,348,4.124,349,1.523,350,5.867,351,1.523,352,1.523,353,1.803,354,1.523,355,2.886,356,2.886,357,2.886,358,1.803,359,4.124,360,1.803,361,1.523,362,2.437,363,1.523,364,1.803]],["title/dependencies.html",[25,2.064,365,2.812]],["body/dependencies.html",[12,0.026,20,0.017,21,0.017,25,1.678,44,1.496,366,3.292,367,5.563,368,3.292,369,3.292,370,3.292,371,3.292,372,3.292,373,4.523,374,3.292,375,3.292,376,3.292,377,3.292,378,3.292,379,3.292,380,3.292,381,3.292,382,3.292,383,3.292,384,3.292,385,4.523,386,3.292,387,3.292,388,3.292,389,5.167,390,3.292,391,3.292,392,3.292,393,3.292,394,3.292,395,3.292,396,3.292,397,3.292,398,3.292,399,3.292,400,3.292,401,3.292,402,3.292,403,3.292,404,3.292,405,3.292]],["title/miscellaneous/enumerations.html",[406,1.556,407,3.418]],["body/miscellaneous/enumerations.html",[8,0.351,12,0.026,19,3.108,20,0.017,21,0.017,144,3.202,204,1.892,205,2.608,218,3.202,220,3.202,237,3.202,293,2.872,406,1.703,407,2.599,408,3.077,409,3.077,410,3.077,411,3.077,412,3.077,413,3.077,414,4.316,415,3.077,416,4.316,417,4.316,418,3.077,419,5.899,420,5.899,421,3.077,422,3.077,423,3.077,424,5.899,425,3.077,426,3.077]],["title/miscellaneous/functions.html",[406,1.556,427,3.418]],["body/miscellaneous/functions.html",[4,0.26,8,0.55,12,0.022,20,0.022,21,0.022,352,4.066,354,5.228,406,2.665,427,4.066,428,4.816,429,4.816,430,4.816]],["title/index.html",[8,0.321,431,2.812,432,2.812]],["body/index.html",[6,0.304,12,0.025,20,0.016,21,0.016,100,1.779,102,2.486,158,2.486,190,1.779,231,2.185,334,2.486,341,2.185,433,2.945,434,2.945,435,4.184,436,2.945,437,2.945,438,2.945,439,2.945,440,4.866,441,2.945,442,2.945,443,2.945,444,5.982,445,2.945,446,2.945,447,2.945,448,5.815,449,2.945,450,2.945,451,4.184,452,2.945,453,2.945,454,2.945,455,2.945,456,4.184,457,4.184,458,2.945,459,2.945,460,2.945,461,4.184,462,4.184,463,2.945,464,2.945,465,2.945,466,2.945,467,2.945,468,2.486,469,2.945,470,2.945,471,2.945,472,2.945,473,2.945,474,2.945,475,2.945,476,2.945,477,2.945,478,2.945,479,2.945,480,2.945,481,2.945,482,2.945,483,2.945,484,2.945]],["title/classes/loginDTO.html",[44,1.114,310,2.034]],["body/classes/loginDTO.html",[3,0.26,4,0.193,6,0.37,8,0.409,11,1.584,12,0.024,17,1.817,20,0.018,21,0.018,46,1.359,64,0.775,79,1.584,80,3.994,81,2.096,114,2.649,131,1.696,134,1.382,173,2.163,174,2.893,175,2.163,176,2.163,177,2.893,178,2.163,223,3.552,232,2.936,288,4.453,310,2.163,321,3.023,323,3.023,361,3.023,485,3.58,486,3.58]],["title/modules.html",[24,2.341]],["body/modules.html",[12,0.021,20,0.021,21,0.021,23,2.971,24,2.277,29,2.698,30,2.698,31,2.698,468,5.284,487,6.257,488,6.257,489,6.257]],["title/overview.html",[490,3.878]],["body/overview.html",[2,1.321,12,0.025,14,2.729,20,0.016,21,0.016,23,4.218,24,1.538,25,2.17,26,2.548,27,2.548,28,2.548,29,3.413,30,3.413,31,3.717,32,2.572,33,1.823,34,1.823,39,1.423,46,1.145,74,2.008,83,3.64,115,2.238,127,1.823,179,2.548,180,2.548,181,2.98,260,2.548,261,2.548,262,2.98,326,2.548,327,2.548,328,2.548,329,2.98,490,2.548,491,4.932,492,3.017,493,3.017,494,4.256]],["title/miscellaneous/variables.html",[406,1.556,495,3.418]],["body/miscellaneous/variables.html",[8,0.395,12,0.025,17,2.012,19,2.679,20,0.018,21,0.018,61,2.921,64,0.859,100,2.09,119,3.778,134,0.999,147,2.679,163,2.302,164,2.566,213,2.566,293,2.302,324,2.921,347,2.921,349,4.476,351,4.476,362,2.921,363,4.476,406,1.914,495,2.921,496,4.678,497,4.678,498,3.459,499,4.678,500,4.678,501,3.459]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"modules/SeatsModule.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDTO.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":390,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":494,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":394,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":350,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":493,"title":{},"body":{"overview.html":{}}}],["100",{"_index":345,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["2.3.3",{"_index":388,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":346,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":491,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":392,"title":{},"body":{"dependencies.html":{}}}],["4.13.1",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["5.2.0",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":492,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":377,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":169,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{}}}],["addseats",{"_index":159,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["addseats(seatsdto",{"_index":160,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{}}}],["admin",{"_index":416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["affected",{"_index":270,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["age",{"_index":286,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["amazing",{"_index":469,"title":{},"body":{"index.html":{}}}],["annotated",{"_index":109,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["apicreatedresponse({description",{"_index":162,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["apiokresponse({description",{"_index":301,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":446,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["applications",{"_index":439,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":23,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":14,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":59,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["async",{"_index":85,"title":{},"body":{"injectables/JwtStratagy.html":{},"injectables/SeatsService.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["auth.guard.ts",{"_index":72,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":334,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["autoincrement",{"_index":143,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{}}}],["available",{"_index":424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backers",{"_index":470,"title":{},"body":{"index.html":{}}}],["base",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcryptjs",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["bigint",{"_index":292,"title":{},"body":{"entities/Users.html":{}}}],["booked",{"_index":419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booking",{"_index":208,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{},"classes/UsersDTO.html":{}}}],["booking.controller.ts",{"_index":245,"title":{},"body":{"controllers/UserBookingController.html":{},"coverage.html":{}}}],["booking.dto.ts",{"_index":281,"title":{},"body":{"classes/UserbookingDTO.html":{},"coverage.html":{}}}],["booking.entity.ts",{"_index":226,"title":{},"body":{"entities/UserBooking.html":{},"coverage.html":{}}}],["booking.module.ts",{"_index":263,"title":{},"body":{"modules/UserBookingModule.html":{}}}],["booking.repository.ts",{"_index":265,"title":{},"body":{"classes/UserBookingRepository.html":{},"coverage.html":{}}}],["booking.service.ts",{"_index":273,"title":{},"body":{"injectables/UserBookingService.html":{},"coverage.html":{}}}],["booking/dto/user",{"_index":280,"title":{},"body":{"classes/UserbookingDTO.html":{},"coverage.html":{}}}],["booking/status.enum.ts",{"_index":426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["booking/ticket",{"_index":205,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["booking/user",{"_index":225,"title":{},"body":{"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"coverage.html":{}}}],["bookingid",{"_index":277,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["bookingseats",{"_index":259,"title":{},"body":{"controllers/UserBookingController.html":{}}}],["boolean",{"_index":124,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":354,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":99,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["browse",{"_index":489,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":487,"title":{},"body":{"modules.html":{}}}],["building",{"_index":436,"title":{},"body":{"index.html":{}}}],["business",{"_index":193,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":107,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["canactivate",{"_index":120,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":123,"title":{},"body":{"guards/RolesGuard.html":{}}}],["cancel",{"_index":255,"title":{},"body":{"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{}}}],["cancelbooking",{"_index":252,"title":{},"body":{"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{}}}],["cancelbooking(id",{"_index":253,"title":{},"body":{"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{}}}],["cancelled",{"_index":420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":56,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["catch(exception",{"_index":57,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["check",{"_index":82,"title":{},"body":{"interfaces/JwtPayload.html":{},"guards/RolesGuard.html":{}}}],["check_in",{"_index":282,"title":{},"body":{"classes/UserbookingDTO.html":{}}}],["check_out",{"_index":284,"title":{},"body":{"classes/UserbookingDTO.html":{}}}],["class",{"_index":44,"title":{"classes/ExceptionExceptionFilter.html":{},"classes/SeatsDTO.html":{},"classes/SeatsRepository.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{},"classes/loginDTO.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":46,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"classes/SeatsDTO.html":{},"classes/SeatsRepository.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{},"classes/loginDTO.html":{},"overview.html":{}}}],["client",{"_index":101,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["cluster_appmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_seatsmodule",{"_index":179,"title":{},"body":{"modules/SeatsModule.html":{},"overview.html":{}}}],["cluster_seatsmodule_providers",{"_index":180,"title":{},"body":{"modules/SeatsModule.html":{},"overview.html":{}}}],["cluster_userbookingmodule",{"_index":260,"title":{},"body":{"modules/UserBookingModule.html":{},"overview.html":{}}}],["cluster_userbookingmodule_providers",{"_index":261,"title":{},"body":{"modules/UserBookingModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":326,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":328,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":327,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":81,"title":{},"body":{"interfaces/JwtPayload.html":{},"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["column({type",{"_index":145,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}}}],["column({unique",{"_index":290,"title":{},"body":{"entities/Users.html":{}}}],["columns",{"_index":132,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}}}],["complete",{"_index":51,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["connection",{"_index":188,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{}}}],["const",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"injectables/JwtStratagy.html":{},"guards/RolesGuard.html":{},"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":121,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(seatsrepo",{"_index":196,"title":{},"body":{"injectables/SeatsService.html":{}}}],["constructor(uerrepo",{"_index":88,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["constructor(userbookingrepo",{"_index":274,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["constructor(usersrepo",{"_index":336,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":111,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["control",{"_index":52,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/SeatsController.html":{},"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":272,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["coverage",{"_index":341,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":130,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{}}}],["created",{"_index":163,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["created(internal",{"_index":167,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["crud",{"_index":156,"title":{},"body":{"controllers/SeatsController.html":{}}}],["data",{"_index":114,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["database",{"_index":187,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{}}}],["date",{"_index":234,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["dateofbirth",{"_index":287,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["datetime",{"_index":69,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["decorator",{"_index":110,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["default",{"_index":147,"title":{},"body":{"entities/Seats.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"injectables/UserBookingService.html":{},"entities/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":142,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{}}}],["departure_date",{"_index":227,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["dependencies",{"_index":25,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":199,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["description",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{},"classes/loginDTO.html":{}}}],["details",{"_index":217,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"injectables/UsersService.html":{}}}],["details.dto.ts",{"_index":222,"title":{},"body":{"classes/TicketDetailsDTO.html":{},"coverage.html":{}}}],["details.entity.ts",{"_index":207,"title":{},"body":{"entities/TicketDetails.html":{},"coverage.html":{}}}],["details.repository.ts",{"_index":224,"title":{},"body":{"classes/TicketDetailsRepository.html":{},"coverage.html":{}}}],["details/meal.enum.ts",{"_index":413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["details/statusseat.enum.ts",{"_index":425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["details/ticket",{"_index":206,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"coverage.html":{}}}],["development",{"_index":447,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":173,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["e2e",{"_index":458,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":437,"title":{},"body":{"index.html":{}}}],["email",{"_index":80,"title":{},"body":{"interfaces/JwtPayload.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["emailid",{"_index":323,"title":{},"body":{"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["emailid'})@isnotempty({message",{"_index":322,"title":{},"body":{"classes/UsersDTO.html":{}}}],["empty",{"_index":178,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["empty'})@isemail({message",{"_index":485,"title":{},"body":{"classes/loginDTO.html":{}}}],["enter",{"_index":486,"title":{},"body":{"classes/loginDTO.html":{}}}],["entities",{"_index":127,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{},"overview.html":{}}}],["entity",{"_index":125,"title":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{},"coverage.html":{}}}],["enum",{"_index":146,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}}}],["enumerations",{"_index":407,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":61,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["exception",{"_index":53,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["exceptionexceptionfilter",{"_index":45,"title":{"classes/ExceptionExceptionFilter.html":{}},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":55,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["execute",{"_index":98,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["executioncontext",{"_index":105,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["export",{"_index":73,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStratagy.html":{}}}],["exports",{"_index":331,"title":{},"body":{"modules/UsersModule.html":{}}}],["express",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":189,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{}}}],["fastify",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["fetch",{"_index":339,"title":{},"body":{"injectables/UsersService.html":{}}}],["fetched",{"_index":302,"title":{},"body":{"controllers/UsersController.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"modules/SeatsModule.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/loginDTO.html":{}}}],["filter.filter.ts",{"_index":49,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["filter/exception",{"_index":48,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["find",{"_index":324,"title":{},"body":{"classes/UsersDTO.html":{},"miscellaneous/variables.html":{}}}],["flight",{"_index":133,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{}}}],["found",{"_index":304,"title":{},"body":{"controllers/UsersController.html":{}}}],["framework",{"_index":435,"title":{},"body":{"index.html":{}}}],["function",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":427,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":209,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":431,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":297,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":300,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["give",{"_index":50,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"classes/UsersDTO.html":{}}}],["grow",{"_index":465,"title":{},"body":{"index.html":{}}}],["guard",{"_index":115,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":117,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guest",{"_index":417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handling",{"_index":247,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["hello",{"_index":42,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":158,"title":{},"body":{"controllers/SeatsController.html":{},"index.html":{}}}],["host",{"_index":58,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["http",{"_index":176,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["https://nestjs.com",{"_index":481,"title":{},"body":{"index.html":{}}}],["id",{"_index":134,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"classes/loginDTO.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":54,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["incoming",{"_index":248,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/loginDTO.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"modules/SeatsModule.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/loginDTO.html":{}}}],["inject",{"_index":90,"title":{},"body":{"injectables/JwtStratagy.html":{},"guards/RolesGuard.html":{}}}],["injectable",{"_index":38,"title":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":39,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injection",{"_index":200,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["insert",{"_index":223,"title":{},"body":{"classes/TicketDetailsDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["installation",{"_index":443,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":445,"title":{},"body":{"index.html":{}}}],["instance",{"_index":203,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["intercept",{"_index":103,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":104,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interceptor",{"_index":108,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interface",{"_index":74,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":76,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["internal",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_error",{"_index":349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail({message",{"_index":320,"title":{},"body":{"classes/UsersDTO.html":{}}}],["isnotempty({message",{"_index":177,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["join",{"_index":472,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":391,"title":{},"body":{"dependencies.html":{}}}],["jwtauthguard",{"_index":70,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtpayload",{"_index":75,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":337,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstratagy",{"_index":83,"title":{"injectables/JwtStratagy.html":{}},"body":{"injectables/JwtStratagy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":478,"title":{},"body":{"index.html":{}}}],["key",{"_index":141,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{}}}],["license",{"_index":484,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":462,"title":{},"body":{"index.html":{}}}],["list",{"_index":423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["local",{"_index":393,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":195,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["logger(userbookingservice.name",{"_index":279,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["logger(usersservice.name",{"_index":340,"title":{},"body":{"injectables/UsersService.html":{}}}],["logic",{"_index":194,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["login",{"_index":312,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["logindto",{"_index":310,"title":{"classes/loginDTO.html":{}},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/loginDTO.html":{}}}],["loginuser",{"_index":298,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["loginuser(userlogin",{"_index":309,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["main",{"_index":429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manytoone(undefined",{"_index":214,"title":{},"body":{"entities/TicketDetails.html":{},"entities/UserBooking.html":{}}}],["matching",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"modules/SeatsModule.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDTO.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["meal",{"_index":218,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"miscellaneous/enumerations.html":{}}}],["meal_preference",{"_index":210,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{}}}],["message",{"_index":171,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":406,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":461,"title":{},"body":{"index.html":{}}}],["mode",{"_index":451,"title":{},"body":{"index.html":{}}}],["module",{"_index":22,"title":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":24,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":475,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":387,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":479,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":440,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":483,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":202,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["node.js",{"_index":434,"title":{},"body":{"index.html":{}}}],["npm",{"_index":444,"title":{},"body":{"index.html":{}}}],["num_of_luggage",{"_index":228,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["num_of_seats",{"_index":229,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["number",{"_index":138,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":175,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["observable",{"_index":112,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["obtained",{"_index":186,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{}}}],["onetomany(undefined",{"_index":238,"title":{},"body":{"entities/UserBooking.html":{},"entities/Users.html":{}}}],["onetoone(undefined",{"_index":151,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{}}}],["open",{"_index":463,"title":{},"body":{"index.html":{}}}],["operation",{"_index":157,"title":{},"body":{"controllers/SeatsController.html":{}}}],["optional",{"_index":65,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":490,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":365,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":62,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["pass",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["passanger_age",{"_index":211,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{}}}],["passanger_details",{"_index":240,"title":{},"body":{"entities/UserBooking.html":{}}}],["passanger_name",{"_index":212,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{}}}],["passangers",{"_index":278,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["passport",{"_index":389,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":288,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["patch(':id",{"_index":254,"title":{},"body":{"controllers/UserBookingController.html":{}}}],["payload",{"_index":94,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["payload.interface.ts",{"_index":78,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["phone",{"_index":289,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{}}}],["please",{"_index":473,"title":{},"body":{"index.html":{}}}],["post",{"_index":258,"title":{},"body":{"controllers/UserBookingController.html":{}}}],["post('/login",{"_index":311,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":155,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":283,"title":{},"body":{"classes/UserbookingDTO.html":{}}}],["primary",{"_index":140,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{}}}],["primarygeneratedcolumn",{"_index":139,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}}}],["production",{"_index":453,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":433,"title":{},"body":{"index.html":{}}}],["project",{"_index":464,"title":{},"body":{"index.html":{}}}],["promise",{"_index":113,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":79,"title":{},"body":{"interfaces/JwtPayload.html":{},"entities/Seats.html":{},"classes/SeatsDTO.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"classes/loginDTO.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{}}}],["read",{"_index":474,"title":{},"body":{"index.html":{}}}],["record",{"_index":306,"title":{},"body":{"controllers/UsersController.html":{}}}],["reflect",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":122,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":299,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["register(user",{"_index":315,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repositories",{"_index":185,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{}}}],["repository",{"_index":190,"title":{},"body":{"classes/SeatsRepository.html":{},"classes/TicketDetailsRepository.html":{},"classes/UserBookingRepository.html":{},"classes/UsersRepository.html":{},"index.html":{}}}],["request",{"_index":41,"title":{},"body":{"injectables/AppService.html":{},"injectables/ResponseInterceptor.html":{}}}],["requests",{"_index":249,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":67,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{}}}],["responseinterceptor",{"_index":96,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["responses",{"_index":251,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["responsible",{"_index":246,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["results",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"modules/SeatsModule.html":{},"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDTO.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return_date",{"_index":230,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["returning",{"_index":250,"title":{},"body":{"controllers/UserBookingController.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ExceptionExceptionFilter.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":293,"title":{},"body":{"entities/Users.html":{},"classes/UsersDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":119,"title":{},"body":{"guards/RolesGuard.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles_key",{"_index":363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":116,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["rooms",{"_index":243,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{}}}],["rows",{"_index":271,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["run",{"_index":448,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":438,"title":{},"body":{"index.html":{}}}],["seat",{"_index":213,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"miscellaneous/variables.html":{}}}],["seat.ticket_details",{"_index":219,"title":{},"body":{"entities/TicketDetails.html":{}}}],["seat_availability",{"_index":149,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{}}}],["seat_created",{"_index":351,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["seat_number",{"_index":135,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{}}}],["seat_status",{"_index":136,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{}}}],["seats",{"_index":126,"title":{"entities/Seats.html":{}},"body":{"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"coverage.html":{}}}],["seatscontroller",{"_index":153,"title":{"controllers/SeatsController.html":{}},"body":{"controllers/SeatsController.html":{},"modules/SeatsModule.html":{},"coverage.html":{}}}],["seatsdto",{"_index":161,"title":{"classes/SeatsDTO.html":{}},"body":{"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"injectables/SeatsService.html":{},"coverage.html":{}}}],["seatsenum",{"_index":144,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"miscellaneous/enumerations.html":{}}}],["seatsmodule",{"_index":29,"title":{"modules/SeatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules.html":{},"overview.html":{}}}],["seatsrepo",{"_index":201,"title":{},"body":{"injectables/SeatsService.html":{}}}],["seatsrepository",{"_index":183,"title":{"classes/SeatsRepository.html":{}},"body":{"classes/SeatsRepository.html":{},"injectables/SeatsService.html":{},"coverage.html":{}}}],["seatsservice",{"_index":181,"title":{"injectables/SeatsService.html":{}},"body":{"modules/SeatsModule.html":{},"injectables/SeatsService.html":{},"coverage.html":{},"overview.html":{}}}],["server",{"_index":100,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"controllers/SeatsController.html":{},"controllers/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["services",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["set",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shows",{"_index":60,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["side",{"_index":102,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"index.html":{}}}],["soundariya",{"_index":335,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":231,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"index.html":{}}}],["sponsors",{"_index":467,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../meal.enum.ts",{"_index":408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.enum.ts",{"_index":409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seats.enum.ts",{"_index":410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../status.enum.ts",{"_index":412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../statusseat.enum.ts",{"_index":411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":40,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/common/exception",{"_index":47,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"coverage.html":{}}}],["src/constants.ts",{"_index":347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptor/response.interceptor.ts",{"_index":97,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/seats/dto/seats.dto.ts",{"_index":172,"title":{},"body":{"classes/SeatsDTO.html":{},"coverage.html":{}}}],["src/seats/seats.controller.ts",{"_index":154,"title":{},"body":{"controllers/SeatsController.html":{},"coverage.html":{}}}],["src/seats/seats.entity.ts",{"_index":128,"title":{},"body":{"entities/Seats.html":{},"coverage.html":{}}}],["src/seats/seats.enum.ts",{"_index":418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/seats/seats.module.ts",{"_index":182,"title":{},"body":{"modules/SeatsModule.html":{}}}],["src/seats/seats.repository.ts",{"_index":184,"title":{},"body":{"classes/SeatsRepository.html":{},"coverage.html":{}}}],["src/seats/seats.service.ts",{"_index":191,"title":{},"body":{"injectables/SeatsService.html":{},"coverage.html":{}}}],["src/user",{"_index":204,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"classes/TicketDetailsRepository.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/dto/login.dto.ts",{"_index":361,"title":{},"body":{"coverage.html":{},"classes/loginDTO.html":{}}}],["src/users/dto/users.dto.ts",{"_index":318,"title":{},"body":{"classes/UsersDTO.html":{},"coverage.html":{}}}],["src/users/guards/jwt",{"_index":71,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/users/guards/roles.guard.ts",{"_index":118,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/users/jwt/jwt",{"_index":77,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/users/jwt/jwt.strategy.ts",{"_index":84,"title":{},"body":{"injectables/JwtStratagy.html":{},"coverage.html":{}}}],["src/users/role.enum.ts",{"_index":415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/roles/roles.decorator.ts",{"_index":362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":296,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.entity.ts",{"_index":285,"title":{},"body":{"entities/Users.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":330,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.repository.ts",{"_index":332,"title":{},"body":{"classes/UsersRepository.html":{},"coverage.html":{}}}],["src/users/users.service.ts",{"_index":333,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["start",{"_index":449,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":452,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":454,"title":{},"body":{"index.html":{}}}],["started",{"_index":432,"title":{"index.html":{}},"body":{}}],["starter",{"_index":442,"title":{},"body":{"index.html":{}}}],["statements",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":165,"title":{},"body":{"controllers/SeatsController.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserBookingRepository.html":{},"classes/UserbookingDTO.html":{},"controllers/UsersController.html":{}}}],["statuscode",{"_index":66,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"injectables/ResponseInterceptor.html":{}}}],["statusseats",{"_index":220,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"miscellaneous/enumerations.html":{}}}],["statususerbooking",{"_index":237,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"miscellaneous/enumerations.html":{}}}],["stay",{"_index":476,"title":{},"body":{"index.html":{}}}],["store",{"_index":319,"title":{},"body":{"classes/UsersDTO.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/JwtPayload.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":170,"title":{},"body":{"controllers/SeatsController.html":{},"injectables/SeatsService.html":{},"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":164,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":468,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":488,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":131,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"classes/UserBookingRepository.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/loginDTO.html":{}}}],["tables",{"_index":325,"title":{},"body":{"classes/UsersDTO.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":457,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":460,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":459,"title":{},"body":{"index.html":{}}}],["tests",{"_index":456,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":466,"title":{},"body":{"index.html":{}}}],["ticket",{"_index":216,"title":{},"body":{"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{}}}],["ticket_details",{"_index":137,"title":{},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["ticket_details.booking",{"_index":239,"title":{},"body":{"entities/UserBooking.html":{}}}],["ticket_details.seat",{"_index":152,"title":{},"body":{"entities/Seats.html":{}}}],["ticketdetails",{"_index":150,"title":{"entities/TicketDetails.html":{}},"body":{"entities/Seats.html":{},"classes/SeatsDTO.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"coverage.html":{}}}],["ticketdetailsdto",{"_index":221,"title":{"classes/TicketDetailsDTO.html":{}},"body":{"classes/TicketDetailsDTO.html":{},"coverage.html":{}}}],["ticketdetailsrepo",{"_index":275,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["ticketdetailsrepository",{"_index":198,"title":{"classes/TicketDetailsRepository.html":{}},"body":{"injectables/SeatsService.html":{},"classes/TicketDetailsRepository.html":{},"injectables/UserBookingService.html":{},"coverage.html":{}}}],["ticketrepo",{"_index":197,"title":{},"body":{"injectables/SeatsService.html":{}}}],["timestamp",{"_index":235,"title":{},"body":{"entities/UserBooking.html":{},"entities/Users.html":{}}}],["token",{"_index":314,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":477,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":174,"title":{},"body":{"classes/SeatsDTO.html":{},"classes/TicketDetailsDTO.html":{},"classes/UserbookingDTO.html":{},"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["transformer",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":291,"title":{},"body":{"entities/Users.html":{}}}],["ts",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["twitter",{"_index":482,"title":{},"body":{"index.html":{}}}],["type",{"_index":64,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStratagy.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"entities/Seats.html":{},"controllers/SeatsController.html":{},"classes/SeatsDTO.html":{},"injectables/SeatsService.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{},"classes/loginDTO.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":441,"title":{},"body":{"index.html":{}}}],["uerrepo",{"_index":92,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["ui",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":148,"title":{},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"entities/UserBooking.html":{},"entities/Users.html":{}}}],["undefined})@apiinternalservererrorresponse({description",{"_index":166,"title":{},"body":{"controllers/SeatsController.html":{},"controllers/UsersController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":303,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@get(':id",{"_index":305,"title":{},"body":{"controllers/UsersController.html":{}}}],["undefined})@post",{"_index":168,"title":{},"body":{"controllers/SeatsController.html":{}}}],["undefined})@post('/register",{"_index":317,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":455,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":95,"title":{},"body":{"injectables/JwtStratagy.html":{},"classes/UserBookingRepository.html":{}}}],["update",{"_index":268,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["updatestatus",{"_index":266,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["updatestatus(id",{"_index":267,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["url",{"_index":68,"title":{},"body":{"classes/ExceptionExceptionFilter.html":{}}}],["user",{"_index":232,"title":{},"body":{"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserbookingDTO.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"classes/loginDTO.html":{}}}],["user.userbooking",{"_index":242,"title":{},"body":{"entities/UserBooking.html":{}}}],["user_type",{"_index":233,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["userbooking",{"_index":129,"title":{"entities/UserBooking.html":{}},"body":{"entities/Seats.html":{},"entities/TicketDetails.html":{},"classes/TicketDetailsDTO.html":{},"entities/UserBooking.html":{},"controllers/UserBookingController.html":{},"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"entities/Users.html":{},"classes/UsersDTO.html":{},"coverage.html":{}}}],["userbooking(userbookingdto",{"_index":256,"title":{},"body":{"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{}}}],["userbooking.ticket_details",{"_index":215,"title":{},"body":{"entities/TicketDetails.html":{}}}],["userbooking.user",{"_index":294,"title":{},"body":{"entities/Users.html":{}}}],["userbookingcontroller",{"_index":244,"title":{"controllers/UserBookingController.html":{}},"body":{"controllers/UserBookingController.html":{},"modules/UserBookingModule.html":{},"coverage.html":{}}}],["userbookingdto",{"_index":257,"title":{"classes/UserbookingDTO.html":{}},"body":{"controllers/UserBookingController.html":{},"injectables/UserBookingService.html":{},"classes/UserbookingDTO.html":{},"coverage.html":{}}}],["userbookingid",{"_index":269,"title":{},"body":{"classes/UserBookingRepository.html":{}}}],["userbookingmodule",{"_index":30,"title":{"modules/UserBookingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserBookingModule.html":{},"modules.html":{},"overview.html":{}}}],["userbookingrepo",{"_index":276,"title":{},"body":{"injectables/UserBookingService.html":{}}}],["userbookingrepository",{"_index":264,"title":{"classes/UserBookingRepository.html":{}},"body":{"classes/UserBookingRepository.html":{},"injectables/UserBookingService.html":{},"coverage.html":{}}}],["userbookingservice",{"_index":262,"title":{"injectables/UserBookingService.html":{}},"body":{"modules/UserBookingModule.html":{},"injectables/UserBookingService.html":{},"coverage.html":{},"overview.html":{}}}],["userdto",{"_index":308,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":307,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userlogin",{"_index":313,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userrepository",{"_index":91,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["users",{"_index":241,"title":{"entities/Users.html":{}},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{},"entities/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"coverage.html":{}}}],["usersbooking",{"_index":236,"title":{},"body":{"entities/UserBooking.html":{},"classes/UserbookingDTO.html":{}}}],["userscontroller",{"_index":295,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersdto",{"_index":316,"title":{"classes/UsersDTO.html":{}},"body":{"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodule",{"_index":31,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepo",{"_index":338,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersrepository",{"_index":89,"title":{"classes/UsersRepository.html":{}},"body":{"injectables/JwtStratagy.html":{},"classes/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersservice",{"_index":329,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":321,"title":{},"body":{"classes/UsersDTO.html":{},"classes/loginDTO.html":{}}}],["validate",{"_index":86,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["validate(payload",{"_index":93,"title":{},"body":{"injectables/JwtStratagy.html":{}}}],["validator",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/SeatsService.html":{},"classes/TicketDetailsDTO.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":348,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":495,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waitlist",{"_index":421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":450,"title":{},"body":{"index.html":{}}}],["website",{"_index":480,"title":{},"body":{"index.html":{}}}],["world",{"_index":43,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":192,"title":{},"body":{"injectables/SeatsService.html":{},"injectables/UserBookingService.html":{},"injectables/UsersService.html":{}}}],["yes",{"_index":414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["you'd",{"_index":471,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/SeatsModule.html":{},"modules/UserBookingModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                This is the base controller for every controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n                    Pass Appservice controller to service\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        returns services value\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nSeatsModule\n\nSeatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSeatsModule->AppModule\n\n\n\n\n\nUserBookingModule\n\nUserBookingModule\n\nAppModule -->\n\nUserBookingModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SeatsModule\n                        \n                        \n                            UserBookingModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the base service of every service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n\n\n            \n                \n                    Get request from Appcontroller and returns the value\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Hello World\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceptionExceptionFilter.html":{"url":"classes/ExceptionExceptionFilter.html","title":"class - ExceptionExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceptionExceptionFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception-filter/exception-filter.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                this will give you complete control for your exception.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n\n\n            \n                \n                    It is shows error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any\n\n                                    \n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ArgumentsHost\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        statusCode, response, url and datetime\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/guards/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                To export JwtAuthGuard\n\n            \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt/jwt-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface JwtPayLoad\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email column to check jwtPayload\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStratagy.html":{"url":"injectables/JwtStratagy.html","title":"injectable - JwtStratagy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStratagy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/jwt/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                To export JwtStratagy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uerRepo: UsersRepository)\n                    \n                \n\n                \n                    \n                            Constructor for inject UserRepository\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uerRepo\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n\n\n            \n                \n                    To validate payload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JwtPayload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        response\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/response.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                It will execute request and response both server and client side\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n\n\n            \n                \n                    An interceptor is a class annotated with the @Injectable() decorator\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ExecutionContext\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CallHandler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        returns data and statusCode\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    RolesGuard for check roles\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            Constructor to inject reflector\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reflector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n                    CanActivate\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ExecutionContext\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        roles\n\n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Seats.html":{"url":"entities/Seats.html","title":"entity - Seats","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Seats\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                UserBooking entity for create table columns\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flight\n                            \n                            \n                                id\n                            \n                            \n                                seat_number\n                            \n                            \n                                seat_status\n                            \n                            \n                                ticket_details\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create flight column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create seat_number column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeatsEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: SeatsEnum, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    Create seat_Availability column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticket_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketDetails\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, ticket_details => ticket_details.seat)\n                        \n                    \n                \n\n            \n                \n                    Create ticket_details column in seats table\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SeatsController.html":{"url":"controllers/SeatsController.html","title":"controller - SeatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SeatsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                seats\n            \n\n\n            \n                Description\n            \n            \n                SeatsController - All seats CRUD operation is here\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSeats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSeats\n                        \n                    \n                \n            \n            \n                \naddSeats(seatsDto: SeatsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Seats created successfully', status: undefined})@ApiInternalServerErrorResponse({description: 'Seats not created(Internal Server) ', status: undefined})@Post()\n                \n            \n\n\n\n            \n                \n                    add seats\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seatsDto\n                                    \n                                                SeatsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SeatsDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeatsDTO.html":{"url":"classes/SeatsDTO.html","title":"class - SeatsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeatsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/dto/seats.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for transfer a data from HTTP\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flight\n                            \n                            \n                                id\n                            \n                            \n                                seat_number\n                            \n                            \n                                seat_status\n                            \n                            \n                                ticket_details\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Flight should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create flight column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'seat_number should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create seat_number column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SeatsEnum\n\n                    \n                \n\n            \n                \n                    Create seat_Availability column in seats table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticket_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketDetails\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ticket_details should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create ticket_details column in seats table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeatsModule.html":{"url":"modules/SeatsModule.html","title":"module - SeatsModule","body":"\n                   \n\n\n\n\n    Modules\n    SeatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SeatsModule\n\n\n\ncluster_SeatsModule_providers\n\n\n\n\nSeatsService\n\nSeatsService\n\n\n\nSeatsModule\n\nSeatsModule\n\nSeatsModule -->\n\nSeatsService->SeatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seats/seats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SeatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SeatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeatsRepository.html":{"url":"classes/SeatsRepository.html","title":"class - SeatsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeatsRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repositories can be obtained from the database connection\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeatsService.html":{"url":"injectables/SeatsService.html","title":"injectable - SeatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeatsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seats/seats.service.ts\n        \n\n\n            \n                Description\n            \n            \n                SeatsService -- to write a business logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSeats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seatsRepo: SeatsRepository, ticketRepo: TicketDetailsRepository)\n                    \n                \n\n                \n                    \n                            dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        seatsRepo\n                                                  \n                                                        \n                                                                        SeatsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SeatsRepository\n\n                                                        \n                                                \n                                                \n                                                        ticketRepo\n                                                  \n                                                        \n                                                                        TicketDetailsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                TicketDetailsRepository\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addSeats\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSeats(seatsDto: SeatsDTO)\n                \n            \n\n\n\n\n            \n                \n                    Add seats\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    seatsDto\n                                    \n                                                SeatsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        SeatsDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger()\n                    \n                \n\n            \n                \n                    Logger instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TicketDetails.html":{"url":"entities/TicketDetails.html","title":"entity - TicketDetails","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TicketDetails\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/ticket-details/ticket-details.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                TicketDetails entity for create table columns\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                meal_preference\n                            \n                            \n                                passanger_age\n                            \n                            \n                                passanger_name\n                            \n                            \n                                seat\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserBooking\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, userBooking => userBooking.ticket_details)\n                        \n                    \n                \n\n            \n                \n                    Create booking column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create gender column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meal_preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Meal, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    Create meal_preference column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passanger_age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create passanger_age column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passanger_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create passanger_name column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Seats\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, seat => seat.ticket_details)\n                        \n                    \n                \n\n            \n                \n                    Create seat_number column in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusSeats\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: StatusSeats, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    Create status column in ticket-details table\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketDetailsDTO.html":{"url":"classes/TicketDetailsDTO.html","title":"class - TicketDetailsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketDetailsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/ticket-details/ticket-details.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for transfer a data from HTTP\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                meal_preference\n                            \n                            \n                                passanger_age\n                            \n                            \n                                passanger_name\n                            \n                            \n                                seat\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        booking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserBooking\n\n                    \n                \n\n            \n                \n                    Insert booking value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'gender should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Insert gender value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meal_preference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'meal_preference should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Insert meal_preference value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passanger_age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'passanger_name should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Insert passanger_age value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passanger_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'passanger_name should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Insert passanger_name value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Seats\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'seat should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Insert seat_number value in ticket-details table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusSeats\n\n                    \n                \n\n            \n                \n                    Insert status value in ticket-details table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketDetailsRepository.html":{"url":"classes/TicketDetailsRepository.html","title":"class - TicketDetailsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketDetailsRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/ticket-details/ticket-details.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repositories can be obtained from the database connection\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserBooking.html":{"url":"entities/UserBooking.html","title":"entity - UserBooking","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserBooking\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/user-booking.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                UserBooking entity for create table columns\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                departure_date\n                            \n                            \n                                id\n                            \n                            \n                                num_of_luggage\n                            \n                            \n                                num_of_seats\n                            \n                            \n                                return_date\n                            \n                            \n                                source\n                            \n                            \n                                status\n                            \n                            \n                                ticket_details\n                            \n                            \n                                user\n                            \n                            \n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n\n            \n                \n                    Create departure_date column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num_of_luggage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create num_of_luggage column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num_of_seats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create num_of_seats column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        return_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n\n            \n                \n                    Create return_date column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create source column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusUserBooking\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: StatusUserBooking, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    Create status column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticket_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketDetails[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, ticket_details => ticket_details.booking)\n                        \n                    \n                \n\n            \n                \n                    Create passanger_details column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.userBooking)\n                        \n                    \n                \n\n            \n                \n                    Create rooms column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create user_type column in usersBooking table\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserBookingController.html":{"url":"controllers/UserBookingController.html","title":"controller - UserBookingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserBookingController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/user-booking.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-booking\n            \n\n\n            \n                Description\n            \n            \n                UserBookingController -- Controllers are responsible for handling incoming requests and returning responses.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelBooking\n                            \n                            \n                                userBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \ncancelBooking(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n\n\n            \n                \n                    Cancel booking\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns success message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBooking\n                        \n                    \n                \n            \n            \n                \nuserBooking(userBookingDTO: UserbookingDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n\n\n            \n                \n                    Create bookingSeats\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userBookingDTO\n                                    \n                                                UserbookingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserBookingModule.html":{"url":"modules/UserBookingModule.html","title":"module - UserBookingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserBookingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserBookingModule\n\n\n\ncluster_UserBookingModule_providers\n\n\n\n\nUserBookingService\n\nUserBookingService\n\n\n\nUserBookingModule\n\nUserBookingModule\n\nUserBookingModule -->\n\nUserBookingService->UserBookingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-booking/user-booking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserBookingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserBookingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserBookingRepository.html":{"url":"classes/UserBookingRepository.html","title":"class - UserBookingRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserBookingRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/user-booking.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repositories can be obtained from the database connection\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStatus(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Update status of userbooking table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userBookingId\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        affected rows count\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserBookingService.html":{"url":"injectables/UserBookingService.html","title":"injectable - UserBookingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserBookingService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/user-booking.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserBookingService -- to write a business logic\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelBooking\n                            \n                            \n                                    Async\n                                userBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userBookingRepo: UserBookingRepository, ticketDetailsRepo: TicketDetailsRepository)\n                    \n                \n\n                \n                    \n                            dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userBookingRepo\n                                                  \n                                                        \n                                                                        UserBookingRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UserBookingRepository\n\n                                                        \n                                                \n                                                \n                                                        ticketDetailsRepo\n                                                  \n                                                        \n                                                                        TicketDetailsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        cancelBooking\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelBooking(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Cancel the booking\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        bookingId\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userBooking\n                        \n                    \n                \n            \n            \n                \n                    \n                    userBooking(userBookingDTO: UserbookingDTO)\n                \n            \n\n\n\n\n            \n                \n                    Add booking for the passangers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userBookingDTO\n                                    \n                                                UserbookingDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UserBookingService.name)\n                    \n                \n\n            \n                \n                    Logger Instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserbookingDTO.html":{"url":"classes/UserbookingDTO.html","title":"class - UserbookingDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserbookingDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-booking/dto/user-booking.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for transfer a data from HTTP\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                departure_date\n                            \n                            \n                                id\n                            \n                            \n                                num_of_luggage\n                            \n                            \n                                num_of_seats\n                            \n                            \n                                return_date\n                            \n                            \n                                source\n                            \n                            \n                                status\n                            \n                            \n                                ticket_details\n                            \n                            \n                                user\n                            \n                            \n                                user_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        departure_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'departure_date should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create check_in column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num_of_luggage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'num_of_luggage should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create num_of_luggage column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num_of_seats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'num_of_seats should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create rooms column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        return_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'return_date should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create price column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'source should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create rooms column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusUserBooking\n\n                    \n                \n\n            \n                \n                    Create status column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ticket_details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketDetails[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ticket_details should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create ticket_details column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'user should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create rooms column in usersBooking table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'user_type should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    Create check_out column in usersBooking table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Users.html":{"url":"entities/Users.html","title":"entity - Users","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Users\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Users entity for create table columns\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                roles\n                            \n                            \n                                userBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create age column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp'})\n                        \n                    \n                \n\n            \n                \n                    Create rooms column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n\n            \n                \n                    Create email column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create gender column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Primary key defines autoIncrement\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create name column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Create name column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bigint'})\n                        \n                    \n                \n\n            \n                \n                    Create name column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n\n            \n                \n                    Create roles column in users table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBooking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserBooking[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userBooking => userBooking.user)\n                        \n                    \n                \n\n            \n                \n                    Create userBooking column in users table\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                UsersController -- Controllers are responsible for handling incoming requests and returning responses.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                loginUser\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'User fetched successfully', status: undefined})@ApiNotFoundResponse({description: 'User Not found', status: undefined})@Get(':id')\n                \n            \n\n\n\n            \n                \n                    Fetched record by userId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userId\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        UserDTO\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(userLogin: loginDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n\n\n            \n                \n                    User Login\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userLogin\n                                    \n                                                loginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        loginDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: UsersDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'User created successfully', status: undefined})@ApiInternalServerErrorResponse({description: 'User not created(Internal Server) ', status: undefined})@Post('/register')\n                \n            \n\n\n\n            \n                \n                    Create user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        :UserDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        returns Created user\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersDTO.html":{"url":"classes/UsersDTO.html","title":"class - UsersDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/users.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for transfer a data from HTTP\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                roles\n                            \n                            \n                                userBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'age should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    age column for insert age into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n\n            \n                \n                    dateOfBirth column to store dateOfBirth into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({message: 'Give a valid emailId'})@IsNotEmpty({message: 'email should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User emailId column for insert email into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'gender should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    gender column for insert gender into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    Id is for find the number of the users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'name should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User name column for insert name into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'password should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User password column for insert password into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'phone should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User phone column for insert phone into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    role column for insert roles into the user tables\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userBooking\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserBooking[]\n\n                    \n                \n\n            \n                \n                    UserBooking column to store user booking into the user table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nJwtStratagy \n\nJwtStratagy \n\n\n\nUsersModule\n\nUsersModule\n\nJwtStratagy  -->\n\nUsersModule->JwtStratagy \n\n\n\n\n\nJwtStratagy\n\nJwtStratagy\n\nUsersModule -->\n\nJwtStratagy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStratagy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStratagy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersRepository.html":{"url":"classes/UsersRepository.html","title":"class - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Repositories can be obtained from the database connection\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                 UsersService -- to write a business logic\n @author soundariya\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepo: UsersRepository, jwtService: JwtService)\n                    \n                \n\n                \n                    \n                            dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersRepository\n\n                                                        \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Fetch all user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        userId\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        UserDTO\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(userLogin: loginDTO)\n                \n            \n\n\n\n\n            \n                \n                    User login\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userLogin\n                                    \n                                                loginDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        loginDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        success message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: UsersDTO)\n                \n            \n\n\n\n\n            \n                \n                    Register user name and details into table\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UserDTO\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Created User\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n\n            \n                \n                    Logger instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/exception-filter/exception-filter.filter.ts\n            \n            class\n            ExceptionExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            INTERNAL_ERROR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            SEAT_CREATED\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/interceptor/response.interceptor.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/seats/dto/seats.dto.ts\n            \n            class\n            SeatsDTO\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/seats/seats.controller.ts\n            \n            controller\n            SeatsController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/seats/seats.entity.ts\n            \n            entity\n            Seats\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/seats/seats.repository.ts\n            \n            class\n            SeatsRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/seats/seats.service.ts\n            \n            injectable\n            SeatsService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/user-booking/dto/user-booking.dto.ts\n            \n            class\n            UserbookingDTO\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/user-booking/ticket-details/ticket-details.dto.ts\n            \n            class\n            TicketDetailsDTO\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/user-booking/ticket-details/ticket-details.entity.ts\n            \n            entity\n            TicketDetails\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user-booking/ticket-details/ticket-details.repository.ts\n            \n            class\n            TicketDetailsRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user-booking/user-booking.controller.ts\n            \n            controller\n            UserBookingController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user-booking/user-booking.entity.ts\n            \n            entity\n            UserBooking\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user-booking/user-booking.repository.ts\n            \n            class\n            UserBookingRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/user-booking/user-booking.service.ts\n            \n            injectable\n            UserBookingService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/dto/login.dto.ts\n            \n            class\n            loginDTO\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/dto/users.dto.ts\n            \n            class\n            UsersDTO\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/users/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/jwt/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/users/jwt/jwt.strategy.ts\n            \n            injectable\n            JwtStratagy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/users/roles/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/roles/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/users/users.entity.ts\n            \n            entity\n            Users\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.repository.ts\n            \n            class\n            UsersRepository\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            fastify-swagger : ^4.13.1\n        \n            mysql2 : ^2.3.3\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Meal   (src/.../meal.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            SeatsEnum   (src/.../seats.enum.ts)\n                        \n                        \n                            StatusSeats   (src/.../statusseat.enum.ts)\n                        \n                        \n                            StatusUserBooking   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user-booking/ticket-details/meal.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Meal\n                    \n                \n                        \n                            \n                                 Yes\n                            \n                        \n                        \n                            \n                                Value : yes\n                            \n                        \n                        \n                            \n                                 No\n                            \n                        \n                        \n                            \n                                Value : no\n                            \n                        \n            \n        \n\n    src/users/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Guest\n                            \n                        \n                        \n                            \n                                Value : guest\n                            \n                        \n            \n        \n\n    src/seats/seats.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SeatsEnum\n                    \n                \n                        \n                            \n                                 Booked\n                            \n                        \n                        \n                            \n                                Value : booked\n                            \n                        \n                        \n                            \n                                 Cancelled\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n                        \n                            \n                                 WaitList\n                            \n                        \n                        \n                            \n                                Value : wait list\n                            \n                        \n                        \n                            \n                                 Available\n                            \n                        \n                        \n                            \n                                Value : available\n                            \n                        \n            \n        \n\n    src/user-booking/ticket-details/statusseat.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusSeats\n                    \n                \n                        \n                            \n                                 Booked\n                            \n                        \n                        \n                            \n                                Value : booked\n                            \n                        \n                        \n                            \n                                 Available\n                            \n                        \n                        \n                            \n                                Value : available\n                            \n                        \n                        \n                            \n                                 Cancelled\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n    src/user-booking/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StatusUserBooking\n                    \n                \n                        \n                            \n                                 Available\n                            \n                        \n                        \n                            \n                                Value : available\n                            \n                        \n                        \n                            \n                                 Booked\n                            \n                        \n                        \n                            \n                                Value : booked\n                            \n                        \n                        \n                            \n                                 Cancelled\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main TS file\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/loginDTO.html":{"url":"classes/loginDTO.html","title":"class - loginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  loginDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for transfer a data from HTTP\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email Id should not be empty'})@IsEmail({message: 'Enter valid email id'})\n                        \n                    \n                \n\n            \n                \n                    User emailId column for insert email into the user table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password should not be empty'})\n                        \n                    \n                \n\n            \n                \n                    User password column for insert password into the user table\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserBookingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SeatsModule\n\n\n\ncluster_SeatsModule_providers\n\n\n\ncluster_UserBookingModule\n\n\n\ncluster_UserBookingModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nSeatsModule\n\nSeatsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSeatsModule->AppModule\n\n\n\n\n\nUserBookingModule\n\nUserBookingModule\n\nAppModule -->\n\nUserBookingModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStratagy \n\nJwtStratagy \n\nJwtStratagy  -->\n\nUsersModule->JwtStratagy \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nSeatsService\n\nSeatsService\n\nSeatsModule -->\n\nSeatsService->SeatsModule\n\n\n\n\n\nUserBookingService\n\nUserBookingService\n\nUserBookingModule -->\n\nUserBookingService->UserBookingModule\n\n\n\n\n\nJwtStratagy\n\nJwtStratagy\n\nUsersModule -->\n\nJwtStratagy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            INTERNAL_ERROR   (src/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            SEAT_CREATED   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INTERNAL_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal server error'\n                    \n                \n\n            \n                \n                    Set const INTERNAL_ERROR\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEAT_CREATED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Seat created successfully with id:'\n                    \n                \n\n            \n                \n                    Set const SEAT_CREATED\n\n                \n            \n\n        \n    \n\n    src/users/roles/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n            \n                \n                    Roles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n            \n                \n                    ROLES_KEY for find roles\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
